package Seminar4;
// üìå –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ:

// 1. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ ‚Äú–∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç‚Äù —Å—Ç—Ä–æ–∫–∏.
// 2. –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ print, –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–≤–µ–¥–µ–Ω–Ω–∞—è
// –±—ã–ª–∞ –ø–µ—Ä–≤–æ–π –≤ —Å–ø–∏—Å–∫–µ, –∞ –ø–µ—Ä–≤–∞—è - –ø–æ—Å–ª–µ–¥–Ω–µ–π.
// 3. –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ revert, —É–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ –ø–∞–º—è—Ç–∏.

import java.util.LinkedList;
import java.util.Scanner;

public class Problem3 {
    public static boolean lineArray(String inLine, LinkedList<String> link, boolean run) {
        if (inLine.equals("print")) {
            if (link.size() > 0) {
                for (int i = link.size() - 1; i >= 0; i--) {
                    System.out.println(link.get(i));
                }
                // Scanner next = new Scanner(System.in);
                // System.out.println("–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?\n1 - –¥–∞ 2 - –Ω–µ—Ç");
                // int nextIn = next.nextInt();
                // if (nextIn != 1) run = false;
                // next.close();
            } else System.out.println("–í –ø–∞–º—è—Ç–∏ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏");
        } else if (inLine.equals("revert")) {
            link.removeLast();
            System.out.println("–°—Ç—Ä–æ–∫–∞ —É–¥–∞–ª–µ–Ω–∞!");
        } else if (inLine.equals("exit")) {
            run = false;
        } else if (inLine.equals("menu")) {
            System.out.println();
            menu();
        } else {
            link.add(inLine);
            System.out.println("–°—Ç—Ä–æ–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");
        }
        return run;
    }
    public static void menu(){
        System.out.println("–î–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏.\n–ï—Å–ª–∏ –≤–≤–µ—Å—Ç–∏ \"print\" - –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π.\n–ï—Å–ª–∏ –≤–≤–µ—Å—Ç–∏ \"revert\" - –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ø–∞–º—è—Ç–∏. \n–ï—Å–ª–∏ –≤–≤–µ—Å—Ç–∏ \"exit\" - —Ä–∞–±–æ—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞\n–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ —É–≤–∏–¥–µ—Ç—å —ç—Ç–æ –º–µ–Ω—é, –≤–≤–µ–¥–∏—Ç–µ \"menu\"");
    }

    public static void main(String[] args) {
        LinkedList<String> link = new LinkedList<String>();
        Scanner sc = new Scanner(System.in);
        boolean run = true;
        menu();
        while (run) {
            System.out.print("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: ");
            String inLine = sc.nextLine();
            run = lineArray(inLine, link, run);
        }
        sc.close();
    }
}
