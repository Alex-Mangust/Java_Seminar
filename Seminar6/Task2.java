package Seminar6;

import java.util.HashSet;
import java.util.Random;

// üìå 1. –ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–æ–ª–Ω–∏—Ç –º–∞—Å—Å–∏–≤ –∏–∑ 1000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª—É—á–∞–π–Ω—ã–º–∏
// —Ü–∏—Ñ—Ä–∞–º–∏ –æ—Ç 0 –¥–æ 24.
// üìå 2. –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥, –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –≤—ã—à–µ –º–∞—Å—Å–∏–≤ –∏ —Å
// –ø–æ–º–æ—â—å—é Set –≤—ã—á–∏—Å–ª–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ –¥–∞–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –∏
// –≤–µ—Ä–Ω–∏—Ç–µ –µ–≥–æ –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π.
// üìå –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º—É–ª—É:
// –ø—Ä–æ—Ü–µ–Ω—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª * 100 / –æ–±—â–µ–µ
// –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ.

public class Task2 {

    public static void setArray(int[] arr) {
        Random rand = new Random();
        for (int i = 0; i < arr.length; i++) {
            arr[i] = rand.nextInt(0, 24);
        }
    }

    public static double countUnicalNum(int[] arr) {
        HashSet<Integer> countUn = new HashSet<>();
        for (int i = 0; i < arr.length; i++) {
            countUn.add(arr[i]);
        }
        double sizeCountUn = countUn.size();
        double lengthArr = arr.length;
        double unicalNum = sizeCountUn * (100/lengthArr);

        return unicalNum;
    }
    public static void main(String[] args) {
        int[] arrayRandNum = new int[1000];
        setArray(arrayRandNum);
        System.out.println(countUnicalNum(arrayRandNum) + "%");
        
    }
}
